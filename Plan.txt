1. Find the function that fits the curve well.

2. Calculate offsets
integer array offsets[]
string line
int integer
Readfile "curve1.dat" to line
while(not the end of the file)
cast(line)<-integer
offset[i]=curvefunction(i)-integer

3. Generate offsets file
write integers in array offsets with separator "!" to a file
for example: 2!87!89!-9!.....

4. compress the offsets file using huffman coding to arithmatic coding.
We have a very small alphabet:{0, 1, 2, 3, 4, 5, 6 ,7, 8, 9, -, . , !} //The alphabet now will include a dot.
The output file should not be encoded using UTF-8 or any other coding standard. Requires low level operations.

5. Write decompress program for decompressing offsets.

6. Write the decompress program for curve1.dat. This program use offset decompression as a subroutine.

7. Redo huffman coding directly to "curve1.dat", and write a decompression program without curve function.

8. Compare total size and choose whatever the smallest.

7. Write script.
